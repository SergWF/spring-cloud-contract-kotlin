buildscript {
	ext {
		kotlinVersion = '1.3.10'
		junitVersion = '5.1.0'
		springBootVersion = '2.1.1.RELEASE'
		assertJVersion = '3.11.1'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'de.bosch.probe.kt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

ext['springCloudVersion'] = 'Greenwich.RC1'

dependencies {
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
	implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
	testImplementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')

	testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
	testImplementation "org.assertj:assertj-core:${assertJVersion}"

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
